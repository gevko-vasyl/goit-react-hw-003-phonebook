{"version":3,"sources":["components/Container/Container.jsx","components/ContactFrom/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","resetForm","this","type","pattern","title","required","onChange","Component","ContactListItem","id","deleteItem","onClick","ContactList","contacts","map","Filter","initialState","App","filter","addContact","contact","shortid","generate","deleteContact","prevState","handleFilterChange","handleAddContact","preventDuplicateContacs","includes","alert","length","getFilteredContacts","normalizedFilter","toLowerCase","data","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e20fcd9.chunk.js","sourcesContent":["import './Container.scss';\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"Container\">\n      <h1 className=\"Container__title\">Phonebook</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = event => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className=\"Form__button\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, deleteItem }) => {\n  return (\n    <li className=\"ContactListItem\">\n      <p className=\"ContactListItem__text\">{name}</p>\n      <p className=\"ContactListItem__text\">{number}</p>\n      <button\n        className=\"ContactListItem__button\"\n        onClick={() => deleteItem(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport './ContactList.scss';\n\nconst ContactList = ({ contacts, deleteItem }) => {\n  return (\n    <ul className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          deleteItem={deleteItem}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.any.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport './Filter.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"Filter\">\n    <h2 className=\"Filter__contacts-title\">Contacts</h2>\n    <h3 className=\"Filter__title\">Find contacts by name</h3>\n    <input\n      className=\"Filter__input\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactFrom';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    data\n      ? this.setState({ contacts: data })\n      : this.setState({ contacts: initialState });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addContact = (name, number) => {\n    const contact = { id: shortid.generate(), name: name, number: number };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  handleAddContact = (name, number) => {\n    this.preventDuplicateContacs(name, number) && this.addContact(name, number);\n  };\n\n  preventDuplicateContacs = name => {\n    const { contacts } = this.state;\n    const filteredContacts = contacts.filter(contact => {\n      contact.name.includes(name) && alert(`${name} is already in contacts.`);\n      return contact.name.includes(name);\n    });\n    return filteredContacts.length !== 1;\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    return (\n      <Container>\n        <ContactForm onSubmit={this.handleAddContact} />\n\n        <Filter value={this.state.filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          deleteItem={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}